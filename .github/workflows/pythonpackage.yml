name: Json2xml

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [pypy-3.10, '3.10', '3.11' , '3.12', '3.13']
        os: [
          ubuntu-latest,
          windows-latest,
          macos-latest,
        ]
        include:
          # Add exact version 3.14.0-alpha.0 for ubuntu-latest only
          - python-version: '3.14.0-alpha.0'
            os: ubuntu-latest
        exclude:
          # Exclude other OSes with Python 3.14.0-alpha.0
          - python-version: '3.14.0-alpha.0'
            os: windows-latest
          - python-version: '3.14.0-alpha.0'
            os: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.2.0
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: requirements-dev.txt

    - name: Install dependencies
      run: uv pip install --system tox tox-uv

    - name: Run tox targets for ${{ matrix.python-version }}
      run: tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)

    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ matrix.python-version }}
        path: '${{ github.workspace }}/.coverage.*'
        include-hidden-files: true
        if-no-files-found: error


  coverage:
    name: Coverage
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: uv pip install --system coverage[toml]

      - name: Download data
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage and fail if it's <100%
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --fail-under=90
          echo "## Coverage summary" >> $GITHUB_STEP_SUMMARY
          python -m coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

      - name: Upload HTML report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
